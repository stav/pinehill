---
import BaseHead from '../../components/BaseHead.astro';
import Header from '../../components/Header.astro';
import Footer from '../../components/Footer.astro';
import { SITE_TITLE } from '../../consts';

export async function getStaticPaths() {
	// Mock data - will be replaced with database queries
	return [
		{ params: { id: '1' } },
		{ params: { id: '2' } },
		{ params: { id: '3' } }
	];
}

const { id } = Astro.params;

// Mock data for now - will be replaced with database queries
const workOrder = {
	id: parseInt(id!),
	title: "Install new circuit breaker panel",
	description: "Need to upgrade the main electrical panel to support additional circuits for the workshop expansion. The current panel is at capacity and we need to add several new circuits for new equipment. This includes:\n\n- 220V circuit for new welder\n- 110V circuits for additional lighting\n- Dedicated circuit for air compressor\n- GFCI circuits for workshop outlets\n\nThe new panel should be rated for at least 200A service to accommodate future expansion.",
	status: "open",
	priority: "high",
	author: "John Smith",
	assignedTo: "Mike Davis",
	createdAt: new Date("2024-01-15"),
	updatedAt: new Date("2024-01-18"),
	comments: [
		{
			id: 1,
			content: "I can help with this installation. We'll need to coordinate with the utility company for the service upgrade.",
			author: "Mike Davis",
			createdAt: new Date("2024-01-16"),
			replies: [
				{
					id: 2,
					content: "Great! I've already contacted the utility company. They said it will take 2-3 weeks for the service upgrade.",
					author: "John Smith",
					createdAt: new Date("2024-01-17")
				}
			]
		},
		{
			id: 3,
			content: "Make sure to get the proper permits for this work. Electrical panel upgrades usually require inspection.",
			author: "Sarah Johnson",
			createdAt: new Date("2024-01-18"),
			replies: []
		}
	]
};

const getStatusColor = (status: string) => {
	switch (status) {
		case 'open': return 'bg-green-100 text-green-800';
		case 'in-progress': return 'bg-blue-100 text-blue-800';
		case 'completed': return 'bg-gray-100 text-gray-800';
		case 'closed': return 'bg-red-100 text-red-800';
		default: return 'bg-gray-100 text-gray-800';
	}
};

const getPriorityColor = (priority: string) => {
	switch (priority) {
		case 'urgent': return 'bg-red-100 text-red-800';
		case 'high': return 'bg-orange-100 text-orange-800';
		case 'medium': return 'bg-yellow-100 text-yellow-800';
		case 'low': return 'bg-green-100 text-green-800';
		default: return 'bg-gray-100 text-gray-800';
	}
};
---

<!doctype html>
<html lang="en">
	<head>
		<BaseHead title={`${workOrder.title} - ${SITE_TITLE}`} description={workOrder.description.substring(0, 160)} />
	</head>
	<body>
		<Header />
		<main class="min-h-screen bg-gray-50 py-8">
			<div class="max-w-4xl mx-auto px-4 sm:px-6 lg:px-8">
				<!-- Breadcrumb -->
				<nav class="mb-8">
					<a href="/work-orders" class="text-primary-600 hover:text-primary-700">
						‚Üê Back to Work Orders
					</a>
				</nav>

				<!-- Work Order Details -->
				<div class="card mb-8">
					<div class="flex flex-col sm:flex-row sm:items-start justify-between mb-6">
						<div class="flex-1">
							<h1 class="text-3xl font-bold text-gray-900 mb-4">{workOrder.title}</h1>
							<div class="flex flex-wrap gap-2 mb-4">
								<span class={`px-3 py-1 rounded-full text-sm font-medium ${getStatusColor(workOrder.status)}`}>
									{workOrder.status.replace('-', ' ')}
								</span>
								<span class={`px-3 py-1 rounded-full text-sm font-medium ${getPriorityColor(workOrder.priority)}`}>
									{workOrder.priority}
								</span>
							</div>
						</div>
						<div class="flex gap-2 mt-4 sm:mt-0">
							<button class="btn btn-secondary">Edit</button>
							<button class="btn btn-primary">Update Status</button>
						</div>
					</div>

					<div class="prose max-w-none mb-6">
						<p class="text-gray-700 whitespace-pre-line">{workOrder.description}</p>
					</div>

					<div class="border-t border-gray-200 pt-6">
						<div class="grid grid-cols-1 sm:grid-cols-2 gap-6 text-sm">
							<div>
								<span class="font-medium text-gray-900">Created by:</span>
								<span class="text-gray-600 ml-2">{workOrder.author}</span>
							</div>
							<div>
								<span class="font-medium text-gray-900">Assigned to:</span>
								<span class="text-gray-600 ml-2">{workOrder.assignedTo}</span>
							</div>
							<div>
								<span class="font-medium text-gray-900">Created:</span>
								<span class="text-gray-600 ml-2">{workOrder.createdAt.toLocaleDateString()}</span>
							</div>
							<div>
								<span class="font-medium text-gray-900">Last updated:</span>
								<span class="text-gray-600 ml-2">{workOrder.updatedAt.toLocaleDateString()}</span>
							</div>
						</div>
					</div>
				</div>

				<!-- Comments Section -->
				<div class="card">
					<h2 class="text-xl font-semibold text-gray-900 mb-6">Comments ({workOrder.comments.length})</h2>
					
					<!-- Add Comment Form -->
					<div class="mb-8">
						<form class="space-y-4">
							<div>
								<label for="comment" class="block text-sm font-medium text-gray-700 mb-2">
									Add a comment
								</label>
								<textarea 
									id="comment" 
									rows="4" 
									class="textarea"
									placeholder="Share your thoughts, suggestions, or updates..."
								></textarea>
							</div>
							<div class="flex justify-end">
								<button type="submit" class="btn btn-primary">
									Post Comment
								</button>
							</div>
						</form>
					</div>

					<!-- Comments List -->
					<div class="space-y-6">
						{workOrder.comments.map((comment) => (
							<div class="border-b border-gray-200 pb-6 last:border-b-0">
								<div class="flex items-start space-x-3">
									<div class="flex-shrink-0">
										<div class="w-8 h-8 bg-primary-100 rounded-full flex items-center justify-center">
											<span class="text-sm font-medium text-primary-600">
												{comment.author.split(' ').map(n => n[0]).join('')}
											</span>
										</div>
									</div>
									<div class="flex-1 min-w-0">
										<div class="flex items-center space-x-2 mb-2">
											<span class="text-sm font-medium text-gray-900">{comment.author}</span>
											<span class="text-sm text-gray-500">{comment.createdAt.toLocaleDateString()}</span>
										</div>
										<p class="text-gray-700 mb-3">{comment.content}</p>
										
										{comment.replies.length > 0 && (
											<div class="ml-6 space-y-4">
												{comment.replies.map((reply) => (
													<div class="flex items-start space-x-3">
														<div class="flex-shrink-0">
															<div class="w-6 h-6 bg-gray-100 rounded-full flex items-center justify-center">
																<span class="text-xs font-medium text-gray-600">
																	{reply.author.split(' ').map(n => n[0]).join('')}
																</span>
															</div>
														</div>
														<div class="flex-1 min-w-0">
															<div class="flex items-center space-x-2 mb-1">
																<span class="text-sm font-medium text-gray-900">{reply.author}</span>
																<span class="text-sm text-gray-500">{reply.createdAt.toLocaleDateString()}</span>
															</div>
															<p class="text-gray-700">{reply.content}</p>
														</div>
													</div>
												))}
											</div>
										)}
										
										<button class="text-sm text-primary-600 hover:text-primary-700 mt-2">
											Reply
										</button>
									</div>
								</div>
							</div>
						))}
					</div>
				</div>
			</div>
		</main>
		<Footer />
	</body>
</html> 
